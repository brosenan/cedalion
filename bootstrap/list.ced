signature(listMember(Elem,Type,List)::pred,[Elem::Type,Type::type,List::list(Type)]).
projection(listMember(Elem,Type,List)::pred,horiz([vis(Elem::Type),halfSize(horiz([label(! (::)),vis(Type::type)])),symbol(8714),vis(List::list(Type))])).
alias(listMember(Elem,Type,List)::pred,!in).
listMember(X,T,[X|_]):-builtin:true.
listMember(X,T,[_|L]):-listMember(X,T,L).
signature(horizontalCont(Delim)::mode,[Delim::visualization]).
signature(horizontal(Start,End,Delim,Empty)::mode,[Start::number,End::number,Delim::visualization,Empty::visualization]).
projection([]::list(_),horizontal(Start,End,Delim,Empty),Empty).
projection([First|Rest]::list(T),horizontal(Start,End,Delim,Empty),brackets(horiz([vis(First::T),cpi:vis(Rest::list(T),horizontalCont(Delim))]),Start,End)).
signature(horizontal(Delim,Empty)::mode,[Delim::visualization,Empty::visualization]).
projection([]::list(_),horizontal(Delim,Empty),Empty).
projection([First|Rest]::list(T),horizontal(Delim,Empty),horiz([annotation:minComment(label(!' '),!'We add this space to allow users to select the entire list'),vis(First::T),cpi:vis(Rest::list(T),horizontalCont(Delim))])).
projection([]::list(T),horizontalCont(Delim),horiz([])).
projection([First|Rest]::list(T),horizontalCont(Delim),horiz([Delim,vis(First::T),cpi:vis(Rest::list(T),horizontalCont(Delim))])).
userVisualization(TTerm,horiz,Hist,Vis):-userVisualization(TTerm,horizontal(91,93,label(! (,)),label(![])),Hist,Vis).
defAtom(vert::mode).
userVisualization(TTerm,vert,Hist,Vis):-userVisualization(TTerm,vertical(symbol(8729),label(![]),horiz([])),Hist,Vis).
signature(vertical(Bullet,EmptyList,End)::mode,[Bullet::visualization,EmptyList::visualization,End::visualization]).
userVisualization(TTerm,cpi:default,Hist,Vis):-userVisualization(TTerm,horiz,Hist,Vis).
projection([]::list(_),vertical(Bullet,EmptyList,End),EmptyList).
projection([F|R]::list(T),vertical(Bullet,EmptyList,End),vert([horiz([Bullet,vis(F::T)]),cpi:vis(R::list(T),vertical(Bullet,End,End))])).
signature(builtin:length(List,T,Len)::pred,[List::list(T),T::type,Len::number]).
unitTest(builtin:length([1,2,3],number,3)).
